@model IList<ACSAdminWeb.Models.HolidayList>

@{
    ViewBag.Title = "Holiday List";
}

@*<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />*@
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Default.js")" type="text/javascript"></script>

<h2 style="text-align: center;">Holiday List</h2>
<script type="text/javascript">

    $(function () {
        $("#FromDate").attr('readonly', 'readonly');
        $("#ToDate").attr('readonly', 'readonly');
    });

</script>

@helper buildLinks(int start, int end, string innerContent)
    {
    for (int i = start; i <= end; i++)
    {
         <a class="@(i == ViewBag.CurrentPage ? "current" : "")"
         href="@Url.Action("Index", "HolidayList", new { page = i, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, EmployeeGroup = ViewBag.Search })">@(innerContent ?? i.ToString())</a>     
    }
     
} 
 
@helper pageLinks()
    {
    const int maxPages = 11;

    if (ViewBag.TotalPages <= maxPages)
    {
        @buildLinks(1, ViewBag.TotalPages, null)
        return;
    }

    int pagesAfter = ViewBag.TotalPages - ViewBag.CurrentPage; // Number of pages after current
    int pagesBefore = ViewBag.CurrentPage - 1; // Number of pages before current

    if (pagesAfter <= 4)
    {
        @buildLinks(1, 1, null) // Show 1st page

        int pageSubset = ViewBag.TotalPages - maxPages - 1 > 1 ? ViewBag.TotalPages - maxPages - 1 : 2;
        @buildLinks(pageSubset, pageSubset, "...") // Show page subset (...)
 
        @buildLinks(ViewBag.TotalPages - maxPages + 3, ViewBag.TotalPages, null) // Show last pages

        return; // Exit
    }

    if (pagesBefore <= 4)
    {
       @buildLinks(1, maxPages - 2, null) // Show 1st pages


        int pageSubset = maxPages + 2 < ViewBag.TotalPages ? maxPages + 2 : ViewBag.TotalPages - 1;
       @buildLinks(pageSubset, pageSubset, "...") // Show page subset (...)
 
       @buildLinks(ViewBag.TotalPages, ViewBag.TotalPages, null) // Show last page

        return; // Exit

    }

    if (pagesAfter > 4)
    {
        @buildLinks(1, 1, null) // Show 1st pages

        int pageSubset1 = ViewBag.CurrentPage - 7 > 1 ? ViewBag.CurrentPage - 7 : 2;
        int pageSubset2 = ViewBag.CurrentPage + 7 < ViewBag.TotalPages ? ViewBag.CurrentPage + 7 : ViewBag.TotalPages - 1;
 
        @buildLinks(pageSubset1, pageSubset1, pageSubset1 == ViewBag.CurrentPage - 4 ? null : "...") // Show 1st page subset (...)
 
        @buildLinks(ViewBag.CurrentPage - 3, ViewBag.CurrentPage + 3, null) // Show middle pages

        // Show 2nd page subset (...)
        // only show ... if page is contigous to the previous one.
        @buildLinks(pageSubset2, pageSubset2, pageSubset2 == ViewBag.CurrentPage + 4 ? null : "...")
        @buildLinks(ViewBag.TotalPages, ViewBag.TotalPages, null) // Show last page

        return; // Exit

    }   
}

@using (Html.BeginForm("Index", "HolidayList", FormMethod.Get))
{
    <div class="attendance-search">
        <div style="margin-left: 100px; margin-right: 100px; background-color: #ffffff;">
        <table>
            <tr>
                <td>
                    @{int year = DateTime.Now.Year;
                      DateTime firstDay = new DateTime(year, 1, 1);
                      }
                    @Html.TextBox("FromDate", @firstDay.ToShortDateString(), new { @class = "dtp", style = "width:120px" })
                    @*<input type="text" id="txtFromDate" name="txtFromDate" value="@DateTime.Now.ToShortDateString()" class="dtp" />*@
                </td>
                <td>
                    @Html.TextBox("ToDate", @DateTime.Now.ToShortDateString(), new { @class = "dtp", style = "width:120px" })
                    @*<input type="text" id="txtToDate" name="txtToDate" value="@DateTime.Now.ToShortDateString()" class="dtp" />*@
                </td>
                <td>
                    @Html.DropDownList("EmployeeGroup")
                </td>
                <td>
                    <input id="gobutton" type="submit" value="Go" />
                </td>
            </tr>
        </table>
        </div>
    </div>
}
<div style="margin-left: 100px; margin-right: 100px;">
<table>
    <tr>
        <th>
            SL.
        </th>
        <th>
            Calendar Date
        </th>
        <th>
            Holiday Name
        </th>
        <th>
            Implemented On
        </th>
    </tr>
    @{int i = 0;}
    @{if (ViewBag.CurrentPage == 1)
    {
        i = 0;
    }
    else
      {
          i = (ViewBag.CurrentPage-1)*20;
      }}

@foreach (var item in Model)
{
    <tr class="@(i++ % 2 == 0 ? "highlighted" : "")">
        <td>
            @i
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CalDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HolidayName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImplementedOn)
        </td>
    </tr>
}

</table>
</div>
<div class="pagination">
Page:
@pageLinks()
</div>
<br/>
<div style="margin-left: 100px; margin-right: 100px; text-align: right;">@Html.ActionLink("Home", "Index", "Home", null, new { @class = "button" })</div>